# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
variables:
  CONTAINER_REGISTRY: ''
  GIT_SUBMODULE_STRATEGY: recursive
  JDK_IMAGE: eclipse-temurin:17-jdk-alpine
  BUILD_JOB_ID: ''
  APP_NAME: TenentBackupScheduler
stages:
- bootjar
- build
- test
- deploy
- review
- dast
- staging
- canary
- production
- incremental rollout 10%
- incremental rollout 25%
- incremental rollout 50%
- incremental rollout 100%
- performance
- cleanup
gradle_bootjar:
  image: "$JDK_IMAGE"
  stage: bootjar
  before_script:
  - cd ./src
  script:
  - echo BUILD_JOB_ID=$CI_JOB_ID >> CI_JOB_ID.env
  - chmod +x ./gradlew
  - "./gradlew clean"
  - "./gradlew bootjar"
  - echo JAR_FILE="`ls src/build/libs/ |  grep jar`" >> CI_JOB_ID.env
  artifacts:
    paths:
    - src/build/libs/*.jar
    when: on_success
    expire_in: 10 min
    reports:
      dotenv: CI_JOB_ID.env
dockerfile:
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ''
    DOCKER_USER: angelinurs
    DOCKER_PASSWORD: "@@rhdrhd12546"
    VERSION: '0.9'
  image: docker:git
  services:
  - docker:dind
  stage: build
  before_script:
  - ls -al ./src
  - echo $PWD
  - ls -al $PWD/src/build/libs
  - cp $PWD/src/build/libs/*.jar $PWD/dockerfile/$APP_NAME/
  - ls -al $PWD/dockerfile/$APP_NAME/
  - echo "build Dockerfile"
  - export DOCKERFILE_NAME=`echo "$CI_PROJECT_NAME" | cut -d '-' -f 2`
  - echo $DOCKERFILE_NAME | sed 's/[A-Z]/L&/g' >> DOCKERFILE_NAME
  - echo $DOCKERFILE_NAME
  - export CONTAINER_REGISTRY=`echo $DOCKER_USER`
  - echo $DOCKER_PASSWORD | docker login --username $DOCKER_USER --password-stdin
  script:
  - docker build -t $DOCKERFILE_NAME:$VERSION ./dockerfile
  - docker image tag $DOCKERFILE_NAME:$VERSION $CONTAINER_REGISTRY/$DOCKERFILE_NAME:$VERSION
  - docker push $CONTAINER_REGISTRY/$DOCKERFILE_NAME:$VERSION
  - docker images | grep $DOCKERFILE_NAME
  - docker system prune -f -a
sast:
  stage: test
include:
- template: Auto-DevOps.gitlab-ci.yml
